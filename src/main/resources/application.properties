spring.application.name=abrantes

spring.datasource.url=jdbc:mysql://localhost:3306/karol
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.open-in-view=false
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

spring.security.user.name=ji
spring.security.user.password=ji22
spring.security.user.roles=USER




#none: Essa é a opção mais conservadora. O Hibernate não faz nenhuma operação no esquema do banco de dados. Isso significa que o esquema deve ser gerenciado manualmente e não será alterado pelo Hibernate.
#validate: O Hibernate valida o esquema do banco de dados em relação às entidades JPA, mas não faz alterações. Ele verifica se as tabelas e colunas necessárias existem no banco de dados, mas não cria ou modifica nada.
#update: Essa opção permite que o Hibernate atualize automaticamente o esquema do banco de dados conforme necessário. Ele cria tabelas para as entidades JPA que ainda não existem e faz atualizações incrementais nas tabelas existentes para refletir as mudanças nas entidades.
#create: Com essa opção, o Hibernate cria o esquema do banco de dados do zero com base nas definições das entidades JPA. Ele descarta o esquema existente, se houver, e recria tudo conforme as entidades.
#create-drop: Essa opção é semelhante a create, mas o Hibernate também remove o esquema do banco de dados quando a aplicação é encerrada. É útil para desenvolvimento e testes, mas não é adequado para ambientes de produção.